from Crypto.PublicKey import RSA
def generate_rsa_private_key(p,q,e=65537):
	n=p*q
	phi_n=(p-1)*(q-1)
	d=pow(e,-1,phi_n)

	rsa_key=RSA.construct((n,e,d,p,q))
	return rsa_key
def save_private_key(private_key,filename):
	with open(filename,"wb") as f:
		f.write(private_key.export_key(format='PEM'))

p=30989413979221186440875537962143588279079180657276785773483163084840787431751925008409382782024837335054414229548213487269055726656919580388980384353939415484564294377142773553463724248812140196477077493185374579859773369113593661078143295090153526634169495633688691753691720088511452131593712380121967802013042678209312444897975134224456911144218687330712554564836016616829044029963400114373142702236623994027926718855592051277298418373056707389464234977873660836337340136755093657804153998347162906059312569124331219753644648657722107663012261197728061352359157767204739644300066112274629356310784052940617408518123
q=30989413979221186440875537962143588279079180657276785773483163084840787431751925008409382782024837335054414229548213487269055726656919580388980384353939415484564294377142773553463724248812140196477077493185374579859773369113593661078143295090153526634169495633688691753691720088511452131593712380121967802013042678209312444897975134224456911144218687330712554564836016616829044029963400114373142702236623994027926718855592051277298418373056707389464234977873660836337340136755093657804153998347162906059312569124331219753644648657722107663012261197728061352359157767204739644300066112274629356310784052940617408516621

private_key=generate_rsa_private_key(p,q)

save_private_key(private_key,"private_id_rsa")
